/* ===================================================
 * budkit-editor.js v0.0.1
 * http://budkit.org/docs/editor
 * ===================================================
 * Copyright 2012 The BudKit Team
 *
 * This source file is subject to version 3.01 of the GNU/GPL License 
 * that is available through the world-wide-web at the following URI:
 * http://www.gnu.org/licenses/gpl.txt  If you did not receive a copy of
 * the GPL License and are unable to obtain it through the web, please
 * send a note to support@stonyhillshq.com so we can mail you a copy immediately.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ========================================================== */

!function($) {

    "use strict"

    //Class Definition
    var BKEditor = function(element, options) {

        var $editor = this;

        this.options = $.extend({}, $.fn.bkeditor.defaults, options)
        this.element = $(element);
        this.container = $("<div/>").addClass("bkeditor").insertAfter(this.element);
        this.toolbar = $("<div/>").addClass("bkeditor-toolbar").appendTo(this.container);
        this.editor = $("<div/>").addClass("bkeditor-content input").appendTo(this.container).width(this.element.outerWidth()).attr("contenteditable", true);
        this.copyAttributes(["spellcheck", "value", "placeholder"]).from(this.element).to(this.editor);
        this.editor.on('click keyup keydown mousedown blur', function() {
            return $editor.updateElement()
        });
        this.togglePlaceHolder();
        this.element.hide();
    }

    BKEditor.prototype = {
        Constructor: BKEditor,
        bold: function() {
        },
        toString: function(html) {
            html = html || false;
            return (!html) ? this.editor.text() : this.editor.html();
        },
        updateElement: function() {
            this.element.val(this.toString(true));
        },
        updateEditor: function() {
            this.editor.html(this.element.val());
        },
        copyAttributes: function(attributesToCopy) {
            return {
                from: function(elementToCopyFrom) {
                    return {
                        to: function(elementToCopyTo) {
                            var attribute, i = 0, length = attributesToCopy.length;
                            for (; i < length; i++) {
                                attribute = attributesToCopy[i];
                                if (typeof(elementToCopyFrom.attr(attribute)) !== "undefined" && elementToCopyFrom.attr(attribute) !== "") {
                                    elementToCopyTo.attr(attribute, elementToCopyFrom.attr(attribute));
                                }
                            }
                        }
                    };
                }
            };
        },
        togglePlaceHolder: function() {
            var CLASS_NAME = "placeholder",
                    $editor = this.editor,
                    unset = function() {
                if ($editor.hasClass(CLASS_NAME)) {
                    $editor.empty();
                }
                $editor.removeClass(CLASS_NAME);
            },
                    set = function() {
                if ($editor.is(":empty")) {
                    $editor.html($editor.attr("placeholder"));
                    $editor.addClass(CLASS_NAME);
                }
            };
            $editor.bind("blur", set).bind("focus", unset);
            set();
        }
    };

    //Plugin Defintion
    $.fn.bkeditor = function(option) {
        return this.each(function() {
            var $this = $(this)
                    , data = $this.data('bkeditor')
                    , options = typeof option == 'object' && option;
            if (!data)
                $this.data('bkeditor', (data = new BKEditor(this, options)));

            $this.on('click keyup keydown mousedown blur', function() {
                data.updateEditor();
            });
            //data.editor.on('click keyup keydown mousedown blur', function(){ data.updateElement()}).on('click', function(){ data.editor.focus() } ) 

        });
    };
    $.fn.bkeditor.defaults = {};
    $.fn.bkeditor.Constructor = BKEditor;


}(window.jQuery);

